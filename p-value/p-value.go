/********************************************************
시나리오
지역 주민을 대상으로 한 설문조사에 따르면 전체 주민의 60%는
정기적으로 운동하지 않고 25%는 가끔 운동을 하며, 15%는
정기적으로 운동을 한다고 답했다.
훌륭한 모델을 설정하고 지역사회 서비스를 제공한 후에 동일한 질문으로
500명에게 설문조사를 반복했다. 결과는 메인 함수에 있다.

책에서 설정한 귀무 가설, 대립가설
H0 : 이전에 관찰된 백분율과의 편차는 순수한 우연에 기반한 것이다.
H1 : 편차는 순수한 우연을 벗어난 주어진 어떤 영향에 기반한 것이다.
		(새로운 지역 사회 서비스일 가능성이 있다.)
*********************************************************/

/*****************************************************************************************************************
p-value
p-값(p-value)은 귀무 가설(null hypothesis)이 맞다는 전제 하에,
표본에서 실제로 관측된 통계치와 '같거나 더 극단적인' 통계치가 관측될 확률이다.
p-값(p-value)는 관찰된 데이터가 귀무가설과 양립하는 정도를 0에서 1 사이의 수치로 표현한 것이다.
 p-value가 작을수록 그 정도가 약하다고 보며, 특정 값 (대개 0.05나 0.01 등) 보다 작을 경우 귀무가설을 기각하는 것이 관례

******************************************************************************************************************/

//아래는 카이제곱 검정 통계량을 사용해 검정 통계량을 계산하는 과정이다.

package main

import (
	"fmt"

	"gonum.org/v1/gonum/stat"
	"gonum.org/v1/gonum/stat/distuv"
)

func main() {
	observed := []float64{
		260.0, // 정기적으로 운동하지 않는다고 답한 수
		135.0, //가끔 운동한다고 답한 수
		105.0, //정기적으로 운동한다고 답한 수를 나타냄
	}

	totalObserved := 500.0

	//예상되는 빈도 계산
	expected := []float64{
		totalObserved * 0.60,
		totalObserved * 0.25,
		totalObserved * 0.15,
	}

	//카이제곱 검정 통계량을 계산한다.
	chiSquare := stat.ChiSquare(observed, expected)

	//표준출력으로 검정 통계량을 출력한다.
	fmt.Printf("\n카이-제곱 통계량 : %0.2f\n", chiSquare)

	//다음으로 이 카이제곱 검정 통계량에 해당하는 p-값을 계산
	//이때 카이제곱 분포에 대한 정보가 필요
	//카이제곱 분포 : 특정 카이제곱과 특정 자유도에 대한 p-값을 정의

	chiDist := distuv.ChiSquared{
		K:   2.0,
		Src: nil,
	}

	pValue := chiDist.Prob(chiSquare)

	//표준출력으로 p-값을 출력
	fmt.Printf("p-value : %0.4f\n\n", pValue)

}
